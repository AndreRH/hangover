# environment needs to be setup before the Makefile can run, e.g.:
#export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/ # Always use Java 8 here
#export PATH=/home/$USER/src/ndk/aarch64-linux-android/bin/:$PATH
#export ANDROID_HOME=/home/$USER/src/ANDROID/android-sdk-linux
#export NDK_SYSROOT=/home/$USER/src/ndk/aarch64-linux-android/sysroot

ifndef JAVA_HOME
$(error JAVA_HOME is not set)
endif

ifndef ANDROID_HOME
$(error ANDROID_HOME is not set)
endif

ifndef NDK_SYSROOT
$(error NDK_SYSROOT is not set)
endif

WINEDLLS = shcore dbghelp ole32 oleaut32 propsys rpcrt4 urlmon netapi32 dnsapi msimg32 dwmapi uxtheme setupapi wintrust wtsapi32 pdh avrt cryptnet imagehlp cryptui sensapi msvcp80 msvcp100 lz32 msi dplay dplayx dpwsockx dpnet dpnaddr dpnhpast dpnlobby dpvoice mpr oledlg shdocvw msacm32 mlang gdiplus shell32 shlwapi wininet comctl32 comdlg32 d3d10core d3d10 d3d10_1 d3dcompiler_43 msxml msxml2 msxml3 msxml4 msxml6 shfolder d2d1 dwrite sspicli quartz msvfw32 adsldp amstream apphelp atl ieframe atl100 atl80 scrrun mshtml inetcomm avifil32 browseui combase explorerframe credui d3dx10_43 d3dx9_43 d3dxof d3drm d3dx11_43 ddrawex devenum msdmo avicap32 dinput8 dispex dmband dmcompos dmime dmloader dmusic dmsynth hnetcfg dxdiagn evr faultrep fusion mscoree gameux hid hlink httpapi actxprxy inetmib1 snmpapi itss infosoft jscript jsproxy kernelbase mapi32 mf mfplat msctf mspatcha odbccp32 msrle32 vbscript mstask taskschd xmllite msvcirt msvcp110 msvcp120 msvcp140 msvcp60 msvcp90 netcfgx netprofm ninput ntdsapi ntprint oleacc packager psapi pstorec qcap qedit qmgr rasapi32 schannel serialui slc spoolss sti sxs twain_32 userenv vcomp version vulkan-1 winevulkan webservices winhttp wer windowscodecsext wlanapi wldap32 wmp wmphoto wmvcore wpc wsdapi wsnmp32 wuapi mssip32 msisip wbemprox
EXTDLLS  = libcharset-1 libiconv-2 libxml2-2 libxslt-1

WINEDLL_TARGET32 = $(patsubst %,build.android/qemu/x86_64-windows-user/qemu_guest_dll32/%.dll,$(WINEDLLS))
WINEDLL_TARGET64 = $(patsubst %,build.android/qemu/x86_64-windows-user/qemu_guest_dll64/%.dll,$(WINEDLLS))
EXTDLL_TARGET32  = $(patsubst %,build.android/qemu/x86_64-windows-user/qemu_guest_dll32/%.dll,$(EXTDLLS))

DLLS = $(strip $(subst include,,$(notdir $(shell find dlls/ -maxdepth 1 -type d | grep -v opengl32 | grep -v "\.drv"))))
DRVS = $(strip $(subst include,,$(notdir $(shell find dlls/ -maxdepth 1 -type d | grep "\.drv"))))

DLL_GUEST = $(patsubst %,%.dll,$(DLLS))
DLL__HOST = $(patsubst %,qemu_%.dll.so,$(DLLS))
DLL___DIRS32 = $(patsubst %,build.android/dlls32/%/,$(DLLS))
DLL_TARGET32 = $(join $(DLL___DIRS32), $(DLL_GUEST)) $(join $(DLL___DIRS32), $(DLL__HOST))
DLL___DIRS64 = $(patsubst %,build.android/dlls64/%/,$(DLLS))
DLL_TARGET64 = $(join $(DLL___DIRS64), $(DLL_GUEST)) $(join $(DLL___DIRS64), $(DLL__HOST))

DRV__HOST = $(patsubst %,qemu_%.so,$(DRVS))
DRV___DIRS32 = $(patsubst %,build.android/dlls32/%/,$(DRVS))
DRV_TARGET32 = $(join $(DRV___DIRS32), $(DRVS)) $(join $(DRV___DIRS32), $(DRV__HOST))
DRV___DIRS64 = $(patsubst %,build.android/dlls64/%/,$(DRVS))
DRV_TARGET64 = $(join $(DRV___DIRS64), $(DRVS)) $(join $(DRV___DIRS64), $(DRV__HOST))

PREFIX = $(abspath build.android/wine-host/dlls/wineandroid.drv/assets/arm64-v8a)
WINE_SRC = $(abspath wine)
WINE_HOST = $(abspath build.android/wine-host)
TRIPLE = -b aarch64-linux-android

all: build.android/wine-host/dlls/wineandroid.drv/hangover-debug.apk
.PHONY: all

# Build libs
build.android/libpng/Makefile: libpng/configure
	@mkdir -p $(@D)
	cd $(@D) ; ../../libpng/configure --host=aarch64-linux-android --prefix=$(abspath build.android/aarch64-linux-android) CXX=aarch64-linux-android-clang++ CC=aarch64-linux-android-clang

build.android/aarch64-linux-android/lib/libpng16.so: build.android/libpng/Makefile
	@mkdir -p $(@D)
	+$(MAKE) -C build.android/libpng/ install


freetype/builds/unix/configure: freetype/autogen.sh
	cd freetype ; NOCONFIGURE=1 ./autogen.sh

build.android/freetype/config.mk: freetype/builds/unix/configure build.android/aarch64-linux-android/lib/libpng16.so
	@rm -rf build.android/freetype
	@mkdir -p build.android/
	cp -ra freetype build.android/
	cd $(@D) ; ./configure --host=aarch64-linux-android --prefix=$(abspath build.android/aarch64-linux-android) --with-harfbuzz=no LIBPNG_CFLAGS="-I$(abspath build.android/aarch64-linux-android/include/libpng16)" LIBPNG_LIBS="-L$(abspath build.android/aarch64-linux-android/lib) -lpng16" CXX=aarch64-linux-android-clang++ CC=aarch64-linux-android-clang

build.android/aarch64-linux-android/lib/libfreetype.so: build.android/freetype/config.mk
	@mkdir -p $(@D)
	+$(MAKE) -C build.android/freetype/ install


glib/configure: glib/autogen.sh
	cd $(@D) ; NOCONFIGURE=1 ./autogen.sh

build.android/glib/Makefile: glib/configure
	@mkdir -p $(@D)
	cd $(@D) ; ../../glib/configure --with-pcre=internal --host=aarch64-linux-android CXX=aarch64-linux-android-clang++ CC=aarch64-linux-android-clang --disable-libmount --prefix=$(abspath build.android/aarch64-linux-android)

build.android/aarch64-linux-android/lib/libglib-2.0.so: build.android/glib/Makefile
	+$(MAKE) -C build.android/glib/ install

build.android/libiconv/Makefile: libiconv/configure
	@mkdir -p $(@D)
	cd $(@D) ; ../../libiconv/configure --host=i686-w64-mingw32 --prefix=$(abspath build.android/i686-w64-mingw32)

build.android/i686-w64-mingw32/bin/libcharset-1.dll: build.android/libiconv/Makefile
	@mkdir -p $(@D)
	+$(MAKE) -C build.android/libiconv/ install


libxml2/configure: libxml2/autogen.sh
	cd $(@D) ; NOCONFIGURE=1 ./autogen.sh

build.android/libxml2/Makefile: libxml2/configure build.android/i686-w64-mingw32/bin/libcharset-1.dll
	@mkdir -p $(@D)
	cd $(@D) ; ../../libxml2/configure --host=i686-w64-mingw32 --enable-static=no --enable-shared=yes --without-python --without-zlib --without-lzma --with-iconv=$(abspath build.android/i686-w64-mingw32) --prefix=$(abspath build.android/i686-w64-mingw32)

build.android/i686-w64-mingw32/bin/libxml2-2.dll: build.android/libxml2/Makefile
	@mkdir -p $(@D)
	+$(MAKE) -C build.android/libxml2/ install


libxslt/configure: libxslt/autogen.sh
	cd $(@D) ; NOCONFIGURE=1 ./autogen.sh

build.android/libxslt/Makefile: libxslt/configure build.android/i686-w64-mingw32/bin/libxml2-2.dll
	@mkdir -p $(@D)
	sed -i "s/WIN32_EXTRA_LDFLAGS/LIBXML_LIBS\) $$\(WIN32_EXTRA_LDFLAGS/" libxslt/libexslt/Makefile.am
	cd $(@D) ; ../../libxslt/configure --host=i686-w64-mingw32 --enable-static=no --enable-shared=yes --without-python --without-plugins --without-crypto --prefix=$(abspath build.android/i686-w64-mingw32) PATH=$(abspath build.android/i686-w64-mingw32/bin):$(PATH) PKG_CONFIG_PATH=$(abspath build.android/i686-w64-mingw32/lib/pkgconfig)

build.android/i686-w64-mingw32/bin/libxslt-1.dll: build.android/libxslt/Makefile
	@mkdir -p $(@D)
	+$(MAKE) -C build.android/libxslt/ install


# Build the wine tools for crosscompilation
build.android/wine-tools/Makefile: wine/configure build.android/aarch64-linux-android/lib/libfreetype.so
	@mkdir -p $(@D)
	cd $(@D) ; ../../wine/configure --enable-win64 --with-freetype --with-gettext --disable-tests --disable-win16 --without-alsa --without-capi --without-cms --without-coreaudio --without-cups --without-curses --without-dbus --without-fontconfig --without-gphoto --without-glu --without-gnutls --without-gsm --without-gstreamer --without-hal --without-jpeg --without-krb5 --without-ldap --without-mpg123 --without-netapi --without-openal --without-opencl --without-opengl --without-osmesa --without-oss --without-pcap --without-pulse --without-png --without-sane --without-tiff --without-v4l --without-x --without-xcomposite --without-xcursor --without-xinerama --without-xinput --without-xinput2 --without-xml --without-xrandr --without-xrender --without-xshape --without-xshm --without-xslt --without-xxf86vm --without-zlib

build.android/wine-tools/.built: build.android/wine-tools/Makefile
	+$(MAKE) -C build.android/wine-tools tools tools/sfnt2fon tools/widl tools/winebuild tools/winegcc tools/wmc tools/wrc
	@mkdir -p build
	ln -sf $(WINE_HOST) build/
	@touch build.android/wine-tools/.built


# Build the Host (e.g. arm64) wine
build.android/wine-host/Makefile: build.android/wine-tools/.built wine/configure
	@mkdir -p $(@D)
	cd $(@D) ; ../../wine/configure --host=aarch64-linux-android --with-wine-tools=../wine-tools --prefix=$(PREFIX) --with-freetype --with-png --bindir=$(PREFIX)/bin --libdir=$(PREFIX)/lib CXX=aarch64-linux-android-clang++ CC=aarch64-linux-android-clang PNG_CFLAGS="-I$(abspath build.android/aarch64-linux-android/include/libpng16)" PNG_LIBS="-L$(abspath build.android/aarch64-linux-android/lib) -lpng16" FREETYPE_CFLAGS="-I$(abspath build.android/aarch64-linux-android/include/freetype2)" FREETYPE_LIBS="-L$(abspath build.android/aarch64-linux-android/lib) -lm -lz -lpng16 -lfreetype" --disable-tests

wine-host build.android/wine-host/.built build.android/wine-host/dlls/wineandroid.drv/wine-debug.apk: build.android/wine-host/Makefile
	+$(MAKE) -C build.android/wine-host
	ln -sf ../wine-tools/tools build.android/wine-host/
	@touch build.android/wine-host/.built

# Cross-Compile Wine for the guest platform to copy higher level DLLs from.
build.android/wine-guest/Makefile: build.android/wine-tools/.built wine/configure
	@mkdir -p $(@D)
	cd $(@D) ; ../../wine/configure --host=x86_64-w64-mingw32 --with-wine-tools=../wine-tools --without-freetype --disable-tests

wine-guest: build.android/wine-guest/Makefile
	+$(MAKE) -C build.android/wine-guest/libs/port
	+$(MAKE) -C build.android/wine-guest $(patsubst %,dlls/%,$(WINEDLLS))

# Cross-Compile Wine for the guest32 platform to copy higher level DLLs from.
build.android/wine-guest32/Makefile: build.android/wine-tools/.built wine/configure build.android/i686-w64-mingw32/bin/libxml2-2.dll build.android/i686-w64-mingw32/bin/libxslt-1.dll
	@mkdir -p $(@D)
	cd $(@D) ; ../../wine/configure --host=i686-w64-mingw32 --with-wine-tools=../wine-tools --without-freetype --disable-tests --with-xml --with-xslt  XML2_CFLAGS="-I$(abspath build.android/i686-w64-mingw32/include/libxml2) -I$(abspath build.android/i686-w64-mingw32/include)" XML2_LIBS="-L$(abspath build.android/i686-w64-mingw32/lib) -lxml2 -liconv"  XSLT_CFLAGS="-I$(abspath build.android/i686-w64-mingw32/include/libxml2) -I$(abspath build.android/i686-w64-mingw32/include)" XSLT_LIBS="-L$(abspath build.android/i686-w64-mingw32/lib) -lxslt -lxml2 -liconv" ac_cv_lib_soname_xslt="libxslt-1.dll"

wine-guest32: build.android/wine-guest32/Makefile
	+$(MAKE) -C build.android/wine-guest32/libs/port
	+$(MAKE) -C build.android/wine-guest32 $(patsubst %,dlls/%,$(WINEDLLS))

# Build qemu
build.android/qemu/Makefile: build.android/aarch64-linux-android/lib/libglib-2.0.so build.android/wine-tools/.built qemu/configure build.android/wine-host/.built
	@mkdir -p $(@D)
	+$(MAKE) -C build.android/glib/ install
	cd $(@D) ; PKG_CONFIG_PATH=$(abspath build.android/aarch64-linux-android/lib/pkgconfig) CC="$(WINE_HOST)/tools/winegcc/winegcc -Wno-macro-redefined -D__ANDROID_API__=24 -I$(NDK_SYSROOT)/usr/include -isystem $(NDK_SYSROOT)/usr/include/aarch64-linux-android -L$(abspath build.android/aarch64-linux-android/lib) --sysroot=$(WINE_HOST) -b aarch64-linux-android --winebuild $(WINE_HOST)/tools/winebuild/winebuild -I$(WINE_HOST)/include -I$(WINE_SRC)/include --wine-objdir $(WINE_HOST) -DWINE_NOWINSOCK -U_WIN32 -UWIN64 -UWIN32 -DNOGDI" CXX="" LDFLAGS="--sysroot=$(NDK_SYSROOT)" ../../qemu/configure --disable-bzip2 --disable-libusb --disable-sdl --disable-snappy --disable-virtfs --disable-opengl --python=/usr/bin/python2.7 --disable-xen --disable-lzo --disable-qom-cast-debug --disable-vnc --disable-seccomp --disable-strip --disable-hax --disable-gnutls --disable-nettle --disable-replication --disable-tpm --disable-gtk --disable-gcrypt --disable-linux-aio --disable-system --disable-tools --disable-linux-user --disable-guest-agent --enable-windows-user --disable-fdt --disable-capstone --disable-werror ; cd ../.. ; touch $@

build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so: build.android/qemu/Makefile
	+$(MAKE) -C build.android/qemu
	@mkdir -p build.android/qemu/x86_64-windows-user/qemu_guest_dll64
	@mkdir -p build.android/qemu/x86_64-windows-user/qemu_host_dll64
	@mkdir -p build.android/qemu/x86_64-windows-user/qemu_guest_dll32
	@mkdir -p build.android/qemu/x86_64-windows-user/qemu_host_dll32

# Build the wrapper DLLs.

# with known dependencies (32-bit):
build.android/dlls32/gdi32/gdi32.dll: build.android/dlls32/ntdll/ntdll.dll
build.android/dlls32/comctl32/comctl32.dll: build.android/dlls32/shlwapi/shlwapi.dll build.android/dlls32/user32/user32.dll
build.android/dlls32/d3d9/d3d9.dll: build.android/dlls32/kernel32/kernel32.dll build.android/dlls32/msvcrt/msvcrt.dll
build.android/dlls32/ddraw/ddraw.dll: build.android/dlls32/msvcrt/msvcrt.dll build.android/dlls32/kernel32/kernel32.dll
build.android/dlls32/dinput/dinput.dll: build.android/dlls32/msvcrt/msvcrt.dll build.android/dlls32/kernel32/kernel32.dll
build.android/dlls32/dsound/dsound.dll: build.android/dlls32/msvcrt/msvcrt.dll
build.android/dlls32/gdi32/gdi32.dll: build.android/dlls32/ntdll/ntdll.dll
build.android/dlls32/kernel32/kernel32.dll: build.android/dlls32/ntdll/ntdll.dll
build.android/dlls32/msvcr100/msvcr100.dll: build.android/dlls32/kernel32/kernel32.dll build.android/dlls32/ntdll/ntdll.dll
build.android/dlls32/msvcr80/msvcr80.dll: build.android/dlls32/kernel32/kernel32.dll build.android/dlls32/ntdll/ntdll.dll
build.android/dlls32/msvcrt/msvcrt.dll: build.android/dlls32/kernel32/kernel32.dll build.android/dlls32/ntdll/ntdll.dll
build.android/dlls32/riched20/riched20.dll: build.android/dlls32/user32/user32.dll
build.android/dlls32/riched32/riched32.dll: build.android/dlls32/riched20/riched20.dll
build.android/dlls32/shcore/shcore.dll: build.android/dlls32/user32/user32.dll build.android/dlls32/gdi32/gdi32.dll
build.android/dlls32/user32/user32.dll: build.android/dlls32/ntdll/ntdll.dll
build.android/dlls32/winmm/winmm.dll: build.android/dlls32/user32/user32.dll

# with known dependencies (64-bit):
build.android/dlls64/gdi32/gdi32.dll: build.android/dlls64/ntdll/ntdll.dll
build.android/dlls64/comctl32/comctl32.dll: build.android/dlls64/shlwapi/shlwapi.dll build.android/dlls64/user32/user32.dll
build.android/dlls64/d3d9/d3d9.dll: build.android/dlls64/kernel32/kernel32.dll build.android/dlls64/msvcrt/msvcrt.dll
build.android/dlls64/ddraw/ddraw.dll: build.android/dlls64/msvcrt/msvcrt.dll build.android/dlls64/kernel32/kernel32.dll
build.android/dlls64/dinput/dinput.dll: build.android/dlls64/msvcrt/msvcrt.dll build.android/dlls64/kernel32/kernel32.dll
build.android/dlls64/dsound/dsound.dll: build.android/dlls64/msvcrt/msvcrt.dll
build.android/dlls64/gdi32/gdi32.dll: build.android/dlls64/ntdll/ntdll.dll
build.android/dlls64/kernel32/kernel32.dll: build.android/dlls64/ntdll/ntdll.dll
build.android/dlls64/msvcr100/msvcr100.dll: build.android/dlls64/kernel32/kernel32.dll build.android/dlls64/ntdll/ntdll.dll
build.android/dlls64/msvcr80/msvcr80.dll: build.android/dlls64/kernel32/kernel32.dll build.android/dlls64/ntdll/ntdll.dll
build.android/dlls64/msvcrt/msvcrt.dll: build.android/dlls64/kernel32/kernel32.dll build.android/dlls64/ntdll/ntdll.dll
build.android/dlls64/riched20/riched20.dll: build.android/dlls64/user32/user32.dll
build.android/dlls64/riched32/riched32.dll: build.android/dlls64/riched20/riched20.dll
build.android/dlls64/shcore/shcore.dll: build.android/dlls64/user32/user32.dll build.android/dlls64/gdi32/gdi32.dll
build.android/dlls64/user32/user32.dll: build.android/dlls64/ntdll/ntdll.dll
build.android/dlls64/winmm/winmm.dll: build.android/dlls64/user32/user32.dll

build.android/dlls64/%/Makefile:
	mkdir -p $(@D)
	$(eval DLL := $(lastword $(subst /, ,$(@D))))
	echo "GUEST_CC=x86_64-w64-mingw32" > $@
	echo "HOST_CC=$(TRIPLE)" >> $@
	echo "SRCDIR=../../../dlls/$(DLL)" >> $@
	echo "DESTDIR?=../../.." >> $@
	echo "GUEST_BIT=64" >> $@
	echo "HOST_BIT=64" >> $@
	echo "WINE_DIR=wine-guest" >> $@
	echo >> $@
	echo "include ../../../dlls/$(DLL)/Makefile" >> $@

build.android/dlls32/%/Makefile:
	mkdir -p $(@D)
	$(eval DLL := $(lastword $(subst /, ,$(@D))))
	echo "GUEST_CC=i686-w64-mingw32" > $@
	echo "HOST_CC=$(TRIPLE)" >> $@
	echo "SRCDIR=../../../dlls/$(DLL)" >> $@
	echo "DESTDIR?=../../.." >> $@
	echo "GUEST_BIT=32" >> $@
	echo "HOST_BIT=64" >> $@
	echo "WINE_DIR=wine-guest32" >> $@
	echo >> $@
	echo "include ../../../dlls/$(DLL)/Makefile" >> $@

define DLLS32_RULE_G
build.android/dlls32/$(1)/$(1).dll: build.android/dlls32/$(1)/Makefile build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so
	+$(MAKE) -C build.android/dlls32/$(1) $(1).dll
	cp -lf build.android/dlls32/$(1)/$(1).dll build.android/qemu/x86_64-windows-user/qemu_guest_dll32/
endef
$(foreach mod,$(DLLS),$(eval $(call DLLS32_RULE_G,$(mod))))

define DLLS64_RULE_G
build.android/dlls64/$(1)/$(1).dll: build.android/dlls64/$(1)/Makefile build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so
	+$(MAKE) -C build.android/dlls64/$(1) $(1).dll
	cp -lf build.android/dlls64/$(1)/$(1).dll build.android/qemu/x86_64-windows-user/qemu_guest_dll64/
endef
$(foreach mod,$(DLLS),$(eval $(call DLLS64_RULE_G,$(mod))))

define DRVS32_RULE_G
build.android/dlls32/$(1)/$(1): build.android/dlls32/$(1)/Makefile build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so
	+$(MAKE) -C build.android/dlls32/$(1) $(1)
	cp -lf build.android/dlls32/$(1)/$(1) build.android/qemu/x86_64-windows-user/qemu_guest_dll32/
endef
$(foreach mod,$(DRVS),$(eval $(call DRVS32_RULE_G,$(mod))))

define DRVS64_RULE_G
build.android/dlls64/$(1)/$(1): build.android/dlls64/$(1)/Makefile build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so
	+$(MAKE) -C build.android/dlls64/$(1) $(1)
	cp -lf build.android/dlls64/$(1)/$(1) build.android/qemu/x86_64-windows-user/qemu_guest_dll64/
endef
$(foreach mod,$(DRVS),$(eval $(call DRVS64_RULE_G,$(mod))))

define DLLS32_RULE_H
build.android/dlls32/$(1)/qemu_$(1).dll.so: build.android/dlls32/$(1)/Makefile build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so
	+$(MAKE) -C build.android/dlls32/$(1) WINEGCC="$(WINE_HOST)/tools/winegcc/winegcc -I$(NDK_SYSROOT)/usr/include -L$(PREFIX)/lib --sysroot=$(WINE_HOST) -b aarch64-linux-android --winebuild $(WINE_HOST)/tools/winebuild/winebuild --wine-objdir $(WINE_HOST) -I$(WINE_HOST)/include -I$(WINE_SRC)/include" qemu_$(1).dll.so
	cp -lf build.android/dlls32/$(1)/qemu_$(1).dll.so build.android/qemu/x86_64-windows-user/qemu_host_dll32/
endef
$(foreach mod,$(DLLS),$(eval $(call DLLS32_RULE_H,$(mod))))

define DLLS64_RULE_H
build.android/dlls64/$(1)/qemu_$(1).dll.so: build.android/dlls64/$(1)/Makefile build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so
	+$(MAKE) -C build.android/dlls64/$(1) WINEGCC="$(WINE_HOST)/tools/winegcc/winegcc -I$(NDK_SYSROOT)/usr/include -L$(PREFIX)/lib --sysroot=$(WINE_HOST) -b aarch64-linux-android --winebuild $(WINE_HOST)/tools/winebuild/winebuild --wine-objdir $(WINE_HOST) -I$(WINE_HOST)/include -I$(WINE_SRC)/include" qemu_$(1).dll.so
	cp -lf build.android/dlls64/$(1)/qemu_$(1).dll.so build.android/qemu/x86_64-windows-user/qemu_host_dll64/
endef
$(foreach mod,$(DLLS),$(eval $(call DLLS64_RULE_H,$(mod))))

define DRVS32_RULE_H
build.android/dlls32/$(1)/qemu_$(1).so: build.android/dlls32/$(1)/Makefile build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so
	+$(MAKE) -C build.android/dlls32/$(1) WINEGCC="$(WINE_HOST)/tools/winegcc/winegcc -I$(NDK_SYSROOT)/usr/include -L$(PREFIX)/lib --sysroot=$(WINE_HOST) -b aarch64-linux-android --winebuild $(WINE_HOST)/tools/winebuild/winebuild --wine-objdir $(WINE_HOST) -I$(WINE_HOST)/include -I$(WINE_SRC)/include" qemu_$(1).so
	cp -lf build.android/dlls32/$(1)/qemu_$(1).so build.android/qemu/x86_64-windows-user/qemu_host_dll32/
endef
$(foreach mod,$(DRVS),$(eval $(call DRVS32_RULE_H,$(mod))))

define DRVS64_RULE_H
build.android/dlls64/$(1)/qemu_$(1).so: build.android/dlls64/$(1)/Makefile build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so
	+$(MAKE) -C build.android/dlls64/$(1) WINEGCC="$(WINE_HOST)/tools/winegcc/winegcc -I$(NDK_SYSROOT)/usr/include -L$(PREFIX)/lib --sysroot=$(WINE_HOST) -b aarch64-linux-android --winebuild $(WINE_HOST)/tools/winebuild/winebuild --wine-objdir $(WINE_HOST) --wine-objdir $(WINE_HOST) -I$(WINE_HOST)/include -I$(WINE_SRC)/include" qemu_$(1).so
	cp -lf build.android/dlls64/$(1)/qemu_$(1).so build.android/qemu/x86_64-windows-user/qemu_host_dll64/
endef
$(foreach mod,$(DRVS),$(eval $(call DRVS64_RULE_H,$(mod))))

# Link Wine libraries.

define WINEDLLS_RULE
build.android/qemu/x86_64-windows-user/qemu_guest_dll32/$(1).dll build.android/qemu/x86_64-windows-user/qemu_guest_dll64/$(1).dll: wine-guest32 wine-guest build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so
	cp -lf build.android/wine-guest32/dlls/$(1)/$(1).dll build.android/qemu/x86_64-windows-user/qemu_guest_dll32/
	cp -lf build.android/wine-guest/dlls/$(1)/$(1).dll   build.android/qemu/x86_64-windows-user/qemu_guest_dll64/
endef
$(foreach mod,$(WINEDLLS),$(eval $(call WINEDLLS_RULE,$(mod))))

# Link external libraries.

define EXTDLLS_RULE
build.android/qemu/x86_64-windows-user/qemu_guest_dll32/$(1).dll: wine-guest32 build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so
	cp -lf build.android/i686-w64-mingw32/bin/$(1).dll build.android/qemu/x86_64-windows-user/qemu_guest_dll32/
endef
$(foreach mod,$(EXTDLLS),$(eval $(call EXTDLLS_RULE,$(mod))))

# Link libwine
build.android/qemu/x86_64-windows-user/qemu_guest_dll32/libwine.dll: wine-guest32 build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so
	cp -lf build.android/wine-guest32/libs/wine/libwine.dll build.android/qemu/x86_64-windows-user/qemu_guest_dll32/libwine.dll
build.android/qemu/x86_64-windows-user/qemu_guest_dll64/libwine.dll: wine-guest build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so
	cp -lf build.android/wine-guest/libs/wine/libwine.dll build.android/qemu/x86_64-windows-user/qemu_guest_dll64/libwine.dll

# Resetup the apk with qemu
build.android/wine-host/dlls/wineandroid.drv/hangover-debug.apk: build.android/wine-host/.built build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so wine-guest wine-guest32 $(DLL_TARGET32) $(DLL_TARGET64) $(DRV_TARGET32) $(DRV_TARGET64) $(WINEDLL_TARGET32) $(WINEDLL_TARGET64) $(EXTDLL_TARGET32) build.android/qemu/x86_64-windows-user/qemu_guest_dll32/libwine.dll build.android/qemu/x86_64-windows-user/qemu_guest_dll64/libwine.dll
	mkdir -p build.android/wine-host/dlls/wineandroid.drv/lib/arm64-v8a
	mkdir -p build.android/wine-host/dlls/wineandroid.drv/assets/arm64-v8a/lib
	cp -lf $(abspath build.android/aarch64-linux-android/lib)/lib*.so build.android/wine-host/dlls/wineandroid.drv/lib/arm64-v8a/
	cp -lf $(abspath build.android/aarch64-linux-android/lib)/lib*.so build.android/wine-host/dlls/wineandroid.drv/assets/arm64-v8a/lib/
	+$(MAKE) -C build.android/wine-host install
	@mkdir -p build.android/npp
	cd build.android/npp ; rm -rf * ; wget https://notepad-plus-plus.org/repository/7.x/7.5.1/npp.7.5.1.bin.x64.7z ; 7z x npp.7.5.1.bin.x64.7z ; rm -f npp.7.5.1.bin.x64.7z
	rm -rf build.android/npp/themes/Bl* build.android/npp/themes/De* build.android/npp/themes/He* build.android/npp/themes/Mo* build.android/npp/themes/Pl* build.android/npp/themes/Ru* build.android/npp/themes/Vi* build.android/npp/themes/vi*
	@mkdir -p build.android/wine-host/dlls/wineandroid.drv/assets/prefix/drive_c/x86
	cp -rf build.android/npp build.android/wine-host/dlls/wineandroid.drv/assets/prefix/drive_c/x86/
	cp -lf build.android/qemu/x86_64-windows-user/qemu-x86_64.exe.so build.android/wine-host/dlls/wineandroid.drv/assets/prefix/drive_c/x86/
	cp -rf build.android/qemu/x86_64-windows-user/qemu_host* build.android/wine-host/dlls/wineandroid.drv/assets/prefix/drive_c/x86/
	cp -rf build.android/qemu/x86_64-windows-user/qemu_guest* build.android/wine-host/dlls/wineandroid.drv/assets/prefix/drive_c/x86/
	rm -rf $(PREFIX)/include
	rm -rf build.android/wine-host/dlls/wineandroid.drv/assets/include
	rm -f build.android/wine-host/dlls/wineandroid.drv/wine-debug.apk
	@mkdir -p build.android/wine-host/dlls/wineandroid.drv/assets/prefix/drive_c
	echo wineconsole.exe >  build.android/wine-host/dlls/wineandroid.drv/assets/prefix/drive_c/winestart.cmd
	echo "c:\ncd c:\\\\x86" >> build.android/wine-host/dlls/wineandroid.drv/assets/prefix/drive_c/winestart.cmd
	echo "c:\\\\x86\\\\qemu-x86_64.exe.so c:\\\\x86\\\\npp\\\\notepad++.exe" >> build.android/wine-host/dlls/wineandroid.drv/assets/prefix/drive_c/winestart.cmd
	+$(MAKE) -C build.android/wine-host/dlls/wineandroid.drv/
	cp -f build.android/wine-host/dlls/wineandroid.drv/wine-debug.apk build.android/wine-host/dlls/wineandroid.drv/hangover-debug.apk
	@echo "Hangover build complete."

# TODO:
#configure: OpenCL development files not found, OpenCL won't be supported.
#configure: pcap development files not found, wpcap won't be supported.
#configure: libdbus development files not found, no dynamic device support.
#configure: lib(n)curses development files not found, curses won't be supported.
#configure: libsane development files not found, scanners won't be supported.
#configure: libv4l development files not found.
#configure: libgphoto2 development files not found, digital cameras won't be supported.
#configure: libgphoto2_port development files not found, digital cameras won't be auto-detected.
#configure: liblcms2 development files not found, Color Management won't be supported.
#configure: gstreamer-1.0 base plugins development files not found, GStreamer won't be supported.
#configure: libudev development files not found, plug and play won't be supported.
#configure: libSDL2 development files not found, SDL2 won't be supported.
#configure: libcapi20 development files not found, ISDN won't be supported.
#configure: libcups development files not found, CUPS won't be supported.
#configure: fontconfig development files not found, fontconfig won't be supported.
#configure: libgsm development files not found, gsm 06.10 codec won't be supported.
#configure: libkrb5 development files not found, Kerberos won't be supported.
#configure: libgssapi_krb5 development files not found (or too old), no Kerberos SSP support.
#configure: libtiff development files not found, TIFF won't be supported.
#configure: libmpg123 development files not found (or too old), mp3 codec won't be supported.
#configure: libopenal development files not found (or too old), OpenAL won't be supported.
#configure: openal-soft development files not found (or too old), XAudio2 won't be supported.
#configure: libvulkan development files not found, Vulkan won't be supported.
#configure: libldap (OpenLDAP) development files not found, LDAP won't be supported.
#configure: WARNING: libxml2 development files not found (or too old), XML won't be supported.
#configure: WARNING: libxslt development files not found, xslt won't be supported.
#configure: WARNING: libgnutls development files not found, no schannel support.
#configure: WARNING: libjpeg development files not found, JPEG won't be supported.
